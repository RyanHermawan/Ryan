@using WebUI.Extension;
@using MvcSiteMapProvider.Web.Html;
@{
    ViewBag.Title = "Kendo Grid";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentController = (WebUI.Controllers.KendoGridController)ViewContext.Controller;
}
<div class="page-header">
    <div class="btn-group pull-right">
        @Html.ActionLink("Add Karyawan", "Create", new { area = "" }, new { @class = "btn btn-default" })
    </div>
    <h1>@ViewBag.Title</h1>
</div>
@Html.Raw(currentController.GetMessage())
<div id="grid"></div>

@section scripts
{
    <script type="text/javascript">
    function truncate() {
        if (confirm("Anda sudah melakukan backup sebelum melakukanghapus data?")) {
            $.post('@Url.Action("Truncate")', function () {
                $('#grid').data('kendoGrid').dataSource.read();
                $('#grid').data('kendoGrid').refresh();
            });
        }
    }

        function deleteItem(e) {
            e.preventDefault();
            var data = this.dataItem(getDataRowGrid(e));
            goToDeletePage('@Url.Action("Delete")' + "?id=" + data.Id,this.dataSource);
        }

        function editItem(e) {
            e.preventDefault();
            var data = this.dataItem(getDataRowGrid(e));
            window.location.href = "@Url.Action("Edit")" + "?id=" + data.Id;
        }

    $(document).ready(function () {
        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "@Url.Action("Binding")",
                    dataType: "json",
                    type: "POST",
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options != '') {
                        return kendo.stringify(options);
                    }
                    else if (operation == "read") {
                        return options;
                    }
                }
            },
            schema: {
                data: "data",
                total: "total",
                model: {
                    fields: {
                        "id": { type: "number" },
                        "NamaKaryawan": { type: "string" },
                        "umur": { type: "number" },
                        "TanggalLahir": { type: "date" },
                        "pendidikan": { type: "string" },
                        "status": { type: "string" },
                        "TanggalMasuk": { type: "date" },
                    }
                }
            },
            pageSize: 10,
            serverPaging: true,
            serverFiltering: true,
            serverSorting: true,
            //filter: { field: "Status", operator: "contains", value: "RETRIEVED" }
            sort: { field: "id", dir: "desc" },
        });

        $("#grid").kendoGrid({
            dataSource: dataSource,
            filterable: kendoGridFilterable,
            pageable: true,
            sortable: true,
            //toolbar: ["create"],
            @*transport: {
                read: {
                    url: "@Url.Action("Binding")",
                    dataType: "JSON",
                    method: "POST",
                },
                update: {
                    url: '@Url.Action("Edit","Home")',
                    dataType: "JSON",
                    method: "POST",
                },
                destroy: {
                    url: '@Url.Action("Delete","Home")',
                    dataType: "JSON",
                    method: "POST",
                },
                create: {
                    url: '@Url.Action("Create","Home")',
                    dataType: "JSON",
                    method: "POST",
                },
            },*@
            columns: [
                {
                    field: "Id",
                    title: "Id",
                },
                {
                    field: "NamaKaryawan",
                    title: "Nama Karyawan",
                    width: 110,
                },
                {
                    field: "Umur",
                },
                {
                    field: "TanggalLahir",
                    title: "Tanggal Lahir",
                    format: "{0: dd MMMM yyyy}",
                    //format: "{0: yyyy-MM-dd HH:mm}",
                    width: 150,
                },
                {
                    field: "Pendidikan",
                },
                {
                    field: "Status",
                },
                {
                    field: "TanggalMasuk",
                    title: "Tanggal Masuk",
                    format: "{0: dd MMMM yyyy}",
                    width: 150,
                },

                {
                    command: [
                        {
                            name: "edit",
                            text: "edit",
                            click: editItem,
                            imageClass: "glyphicon glyphicon-edit",
                            template: '<a class="k-button-icon #=className#" #=attr# href="\\#"><span class="#=imageClass#"></span></a>'
                        },
                        {
                            name: "delete",
                            text: "delete",
                            click: deleteItem,
                            imageClass: "glyphicon glyphicon-remove",
                            template: '<a class="k-button-icon #=className#" #=attr# href="\\#"><span class="#=iconClass# #=imageClass#"></span></a>'
                        }
                    ],
                    width: "90px"
                }
                               
            ],

            //editable: "popup"
        });
    });
    </script>
}



